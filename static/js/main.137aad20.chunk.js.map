{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","button","type","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","text","Notification","message","sectionClass","App","state","onFeedback","e","target","setState","prevState","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iRAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCeQI,MAnBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACE,wBACEL,UAAWC,IAAEK,OACbC,KAAK,SACLC,KAAMJ,EACNK,QAASJ,EAJX,SAMGD,O,gBCaMM,MAtBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,qCACE,oBAAGf,UAAWC,IAAEe,KAAhB,kBAA4BL,KAC5B,oBAAGX,UAAWC,IAAEe,KAAhB,qBAA+BJ,KAC/B,oBAAGZ,UAAWC,IAAEe,KAAhB,iBAA2BH,KAC3B,oBAAGb,UAAWC,IAAEe,KAAhB,mBAA6BF,KAC7B,oBAAGd,UAAWC,IAAEe,KAAhB,+BAEGD,EAFH,WCASE,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCGPC,EAAe,CAAC,WAEhBC,E,4MACJC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,WAAa,SAACC,GACZ,IAAQf,EAASe,EAAEC,OAAXhB,KAER,EAAKiB,UAAS,SAACC,GAAD,sBACXlB,EAAOkB,EAAUlB,GAAQ,O,wDAI9B,WACE,MAA+BmB,KAAKN,MAEpC,OAFA,EAAQV,KAAR,EAAcC,QAAd,EAAuBC,M,6CAKzB,WAGE,OAAe,IAFEc,KAAKN,MAAdV,KAEcgB,KAAKC,uB,oBAG7B,WACE,OACE,0BAAS5B,UAAWmB,EAApB,UACE,eAAC,EAAD,CAASrB,MAAO,wBAAhB,UACE,cAAC,EAAD,CACEM,QAAS,OACTC,gBAAiBsB,KAAKL,aAGxB,cAAC,EAAD,CACElB,QAAS,UACTC,gBAAiBsB,KAAKL,aAGxB,cAAC,EAAD,CACElB,QAAS,MACTC,gBAAiBsB,KAAKL,gBAI1B,cAAC,EAAD,CAASxB,MAAO,aAAhB,SACiC,IAA9B6B,KAAKC,qBACJ,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMgB,KAAKN,MAAMV,KACjBC,QAASe,KAAKN,MAAMT,QACpBC,IAAKc,KAAKN,MAAMR,IAChBC,MAAOa,KAAKC,qBACZb,mBAAoBc,KAAKC,MACvBH,KAAKI,8C,GAzDHC,aAmEHZ,ICtEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.137aad20.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      <button\n        className={s.button}\n        type=\"button\"\n        name={options}\n        onClick={onLeaveFeedback}\n      >\n        {options}\n      </button>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <>\n      <p className={s.text}>Good:{good}</p>\n      <p className={s.text}>Neutral:{neutral}</p>\n      <p className={s.text}>Bad:{bad}</p>\n      <p className={s.text}>Total:{total}</p>\n      <p className={s.text}>\n        Positive feedback:\n        {positivePercentage}%\n      </p>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from \"prop-types\";\n\nfunction Notification({ message }) {\n  return <p>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from \"react\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nconst sectionClass = [\"section\"];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onFeedback = (e) => {\n    const { name } = e.target;\n\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good } = this.state;\n\n    return (good * 100) / this.countTotalFeedback();\n  }\n\n  render() {\n    return (\n      <section className={sectionClass}>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={\"good\"}\n            onLeaveFeedback={this.onFeedback}\n          ></FeedbackOptions>\n\n          <FeedbackOptions\n            options={\"neutral\"}\n            onLeaveFeedback={this.onFeedback}\n          ></FeedbackOptions>\n\n          <FeedbackOptions\n            options={\"bad\"}\n            onLeaveFeedback={this.onFeedback}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={Math.round(\n                this.countPositiveFeedbackPercentage()\n              )}\n            ></Statistics>\n          )}\n        </Section>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__1Dqy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1uwv9\",\"title\":\"Section_title__3y5-_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__1aoNq\"};"],"sourceRoot":""}